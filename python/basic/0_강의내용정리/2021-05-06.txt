수업중프로젝트 숙제검사

T2 : 혼자 공부하는 파이썬 CH02-2
97p
여기부터 ㅇㅇ
제곱 연산자 : **

우선순위 있음. 
곱셈과 나눗셈이 덧셈뺄셈이 나중.

typeError예외
서로 다른 자료를 연산하면 발생.sti
string + int 등과 같은 연산할 때 발생


a + b 일때, 
+는 연산자고, a와 b는 피연산자임.
a와 b가 정수나 실수 등의 숫자형일때는 산술연산자고,
string일때는 문자연결을 의미하는 연결연산자로 사용됨.


문자열 연산자에도 우선순위가 있음
*가 +보다 우선순위가 높음


확인문제 풀어보기

-----------------

2-03 : pdf 102
변수 선언 : 그릇을 만드는것
변수 할당 : 그릇에 내용물 담는것
변수 참조 : call by address/ call by value
값 자체를 참조하는 경우와 값이 어디있는지(주소값을 활용해서)를 찾는 경우가있음
직접접근/간접접근
메모리주소값에 접근하는게 포인터/객체 와 관련된 개념임.

input() 입력받는것
int() 정수형으로 형변환
float() : 실수형으로 형변환
str() : 문자형으로 형변환


변수 : 값을 저장할 때 사용하는 식별자 
pi 에 3.141592 라고 담아두면, 파이는 변수임ㅇㅇ 재활용할 수 있음.
변수, 클래스, 모듈, 함수 그런것들이 있는 이유가 코드를 재활용하기 위함임. 


변수 활용법 세가지
변수 선언 , 변수 할당, 변수 참조

변수 참조 : 변수를 참고하는것. 변수에서 값을 꺼내는 것을 의미함.


좌변 = 우변
우변에 있는것을 좌변에 할당한다는 의미
좌변에는 변수가 옴
우변에는 값(숫자, 문자열, 수식, 함수 등)이 옴

파이썬의 유연성
자바, c의 경우
int pi 와 같이 변수의 자료형을 선언해야함
하지만, 파이썬은 유연하게 나옴


대기업에서는 +=처럼 모호한 것 빠꾸먹임ㅇㅇ
지들 못알아본다고 그러는듯. 우선순위도 누가봐도 우선순위 높은건데도 ()를 넣어서 해줘야한다는듯.

-------------------------------------------
T3: CH02-3
input~~~

input() : 사용자 입력받을 수 있도록 하는 함수
형변환을 영어로 cast라고 함.

# 과제 1 ---------------------------------------------
# open 함수로 특정 csv 열기
# csv 파일은 콤마로 나누어져있으므로
# name, age = csv파일.split(',')
# for 구문, split(), append(), open(), close() 사용해서
# 파일로 가져다가 해보기 
-------------------------------------------------------

int() : int형으로 바꿈
string() : 문자형으로 바꿈

valueError : 
숫자가 아닌 것을 숫자로 변환하려고 할 때
소수점이 있는 숫자를 int형으로 변환하려고 할때

확인문제 ㅇㅇ
int()와 str()은 강제형변환


미니 과제 1------------------------------
= : 대입
== : 동등연산자 # 숫자
equals() : 문자 같은지. 이거 찾아보기 ㅇㅇ

== 과 equals 찾아보기
== : call by value
equals : call by address
메모리의 성질 때문임.
같은 값은 중복하여 저장하지 않음
------------------------------------------------


스왑 : 
a에 들어있는 값과 b에 있는 값을 서로교환해주는것
temp를 만들어서 교환.

?? 파이썬에서는 그냥 바뀜.
굉장히 쉽다고 함. 뭐지??? 파이썬은 템프가 없어?

=----------------------------------------------------
T4 : 혼공파 ch02-4
스트립 != 스플릿
format() :
upper(): 대문자로 바꿔주는거
strip() : 벗겨내는것. 앞 뒤 공백 없앰
find() : 일반적인 파인드는 left find임ㅇㅇ 찾는것. 
in : 안에 있냐? 안에 ~~가 있냐?
split()

함수 : function 사람또는 사물의 기능
문자열. : 자동완성기능나옴

format() : 
"{}".format(101) 
C에서의 %d 와 같은것. 
printf("%d", 10) 여기서 f가 포멧. 
파이썬에서는 이를 format을 통해함.
{}의 수와 format으로 받는 것의 수가 같아야함.
{} : 브레이스 괄호. 기호 라고 함. 정확한 명칭?
숫자가 문자열로 변환됨. format 거치면!


IndexError 
{}가 format의 수보다 많으면 index error 발생
{}가 format의 수보다 적으면, format중 {}의 수만큼 앞에서부터 잘라짐. {}의 수가 2이고 포멧이 3이면, 2개만 들어간다는것. 뒤에 세번째거는 잘림.


{:10d}.format(3)
10d : 10칸 할당. 나머지 공백
05d : 5칸 할당 나머지 0으로 채움

{:+d} 기호와 함께출력. 양수의 경우 +, 음수의 경우 -와 함께 출력됨. -52
{: d} : 공백/기호와 함께 출력.
양수의 경우 공백 1칸, 음수의 경우 -와 함께 출력

"{:=+5d}".format(52)
5칸을 할당하고 +/- 기호와 함께 출력.
빈공간은 공백이 들어감ㅇㅇ

plus_minus = output_k[0]
print(plus_minus)
부호만 뽑아낼 수 있

{:10f}.format()
과 같이 digit과 유사한 형태로 사용할 수 있음. 
기호등을 표기하는게 가능하며, 일정 공간을 할당하여 남는 공간을 공백으로 채우거나 0으로 채울 수 있음. 또한 소수점 이하 몇자리로 자를지를 결정할 수 있다. 10f.5 등과 같이.
소수점 아래 자를 때, 
0~4 내림
5~9 : 올림
으로 나옴

{:g}를 사용하여 의미없는 소수점 자를 수 있음
0.0 과 같이 소수점 이하 0이 나오는 부분 잘라서 출력 가능

---------------------------------------------------------------------------------------------------------------

T5 : 혼공파 CH02-4
upper : 대문자
lower : 소문자

upper() : 소문자 -> 대문자
lower() : 대문자 -> 소문자

# 과제 3 -------------------------------------------
과제 1은 엑셀에 있고, 위에 있는 과제가 과제 2임
# 찾아보고 정리 ------------------------------------
capitalize() : 문자열의 첫글자만 대문자
title() : 문자열에서 첫단어 첫글자 대문자
capwords() : 문자열 첫글자 대문자
regex() : 레귤러 익스패스? 모든 단어 어쩌구
sub()
-------------------------------------------------------

문자열 양 옆 공백 제거 : strip()
strip(), rstrip(), lstrip() 있음.
양쪽, 오른쪽, 왼쪽 벗겨낼(공백제거) 수 있음
문장 중간(단어와 단어 사이)에 있는 공백은 제거되지 않음
이런 기능(공백제거)을 trim이라고 함.
파이썬에서는 trim 함수를 제공하지 않음


is타입()
isalnum() : alphabet + num 
알파벳 또는 숫자로만 구성되어 있는지
pdf129p 참조해서 다 적어두기
True/False 값을 리턴함


find(), rfind()
find() : 왼쪽부터 찾아서 처음 등작하는 위치 찾음
rfind() : 오른쪽부터 찾아서 처음 등장하는 위치 찾음
즉,, 여러개 있어도 가장 먼저 만나는걸 가져옴
인덱스 반환함.


a in b 
b안에 a가 있는지 True/false 값으로 반환



비밀번호 (자리수 8자리 이상, 영어 대소문자 사용, 특수문자(!@#$)사용)
비밀번호 변수 : password

password = input("비밀번호를 입력해주세요")

if len(password) >= 8:
    # 8자리 이상인가?
    print("비밀번호 개수는 정상입니다.")
    if password.isalnum():
        # 알파벳 혹은 숫자로만 구성되어있는가?
        # 이거 꼭 == True 안해도 되지않나 애초에 참거짓값 반환이니까??
        print("비밀번호가 영어 대소문자와 숫자로 구성되어있습니다")
        if '!' in password or '@' in password 등:
	# 특수문자있는지?
	# 리스트형으로 가능하지 않나?
            print("특수문자 !, @가 있습니다. 정상 password입니다.")
  
과제 ------------------------------------------------
비밀번호 체크하는 코드만들기
알파벳, 특수문자 , 숫자 있는지ㅗ학인해서 적용 코드 작성

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------




	
if password.alnum() == False:
    print("특수문자가 포함된 안전한 비밀번호 입니다.")
if password.isalnum() == False:
    print("특수문자가 포함된 안전한 비밀번호 입니다.")

--------------------------------------------------------------

word = input("단어를 입력하세요 :")
output_a = "안녕안녕하세요".find(word)
print(output_a)
len(word)

range(len(word))
output_a[range(len)) # 슬라이싱 개념

word_result = output_a[0:len(word)]
print(word_result)

sentance = "안녕하세요 신동욱 강사님"
word = input("단어를 입력하세요 : ")

output_a = senteace.find(word)
print(output_a)
print(type(output_a))

# dlrjgoqhrl
word_result = sentance[output_a:len(word)]
print(word_result)


password = input("비밀번호를 입력해주세요. 특수문자(!, @, #, $) 포함")

if '!' in password or '@' in password or '#' in password or '$' in password:
	print("특수문자가 포함되어있습니다. 정상 password입니다")
else:
	print("특수문자가 포함되어잇지 않습니다")




split() : 문자열 자르기
a = "10 20 30 40 50".split(" ")
print(a)

-------------------------------------------------------------------
확인문제 4
upstring = string.upper()
이것도 찍어보기


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
T6: 노션

------------------------------------------------------------------------------------------------------------------
T7 : 모두의 딥러닝

인트로 이후
최솟값 구하기 위해서는 이차함수에서 미분해야하고, 이차함수는 평균제곱오차를 통해서 나옴

평균제곱오차 식 : 1/nSigma(y_i - y헷_i)^2
y_i = ax_i + b를 대입 :

a와 b를 주의해야함
필요한 값을 중심으로 미분해야하기 때문
이걸 편미분이라 함

a로 편미분 : 
b로 편미분  :

유도과정 읽어보기ㅇㅇ 


y_pred


-------------------------
다중선형회귀

예측이 맞지 않는 애들이 있었음
이는, 공부한 시간 외에 다른 요소가 성적에 영향을 끼쳤기 때문임. 

하나가 결과에 영향을 주는게 아니라 여러개가 결과에 영향을 주었음을 의미. 


원인이 크다 -> 가중치로 연결. 
결과를 내는 원인이 큰 변수에 대하여 가중치를 더 줌

독립변수 : 원인이 되는 변수
종속변수 : 원인에 영향을 받아 결과가 나오는 변수


y = a_1x_q  + a_2x_2 + b

독립변수가 여러개여도 경사하강법 적용해서 구할 수 있음ㅇㅇ

-----------------------------------------------------------------------------------------------------
T7

다중 선형회귀

